/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ar.ais.views.panels.sale;

import com.ar.ais.models.EntityBeans.Invoice;
import com.ar.ais.models.EntityBeans.InvoiceDetail;
import com.ar.ais.models.EntityBeans.Shop;
import com.ar.ais.models.EntityBeans.Summary;
import com.ar.ais.models.EntityBeans.WorkingSchedule;
import com.ar.ais.models.Response;
import com.ar.ais.utililty.Calc;
import com.ar.ais.utililty.Global;
import com.ar.ais.utililty.Frmttr;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Adeel rana
 */
public class AddReturnPanel extends javax.swing.JPanel {

    private DefaultTableModel dtm;
    private WorkingSchedule ws;
    private Invoice activeInvoice;
    private HashMap<Long, Invoice> map;

    /**
     * Creates new form UsersPanel
     *
     * @param mainPanel
     */
    public AddReturnPanel(JPanel mainPanel) {
        initComponents();
        initData();
    }

    public AddReturnPanel(JPanel mainPanel, Object obj) {
        initComponents();
        this.ws = (WorkingSchedule) obj;
        initData();

    }

    public AddReturnPanel() {
        initComponents();
        initData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.ar.ais.components.render.CustomTable(true);
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextFieldInvNo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldTotal = new javax.swing.JTextField();
        jTextFieldGTotal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabelGTotall = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jTextFieldDiscount = new javax.swing.JTextField();
        jLabelDiscount1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Army Expanded", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add RETURN");

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jTable1.setBackground(new java.awt.Color(178, 178, 178));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Code", "Name", "Available", "Price ", "Qty", "Return", "Total Qty", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTable1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(1).setMinWidth(200);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(120);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        jButton3.setText("Return");
        jButton3.setNextFocusableComponent(jComboBox1);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Shop");

        jComboBox1.setNextFocusableComponent(jTextFieldInvNo);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextFieldInvNo.setEnabled(false);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Invoice No");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Total");

        jLabelGTotall.setForeground(new java.awt.Color(255, 255, 255));
        jLabelGTotall.setText("Gran Total");

        jButton4.setText("Return All ");
        jButton4.setNextFocusableComponent(jComboBox1);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabelDiscount1.setForeground(new java.awt.Color(255, 255, 255));
        jLabelDiscount1.setText("Discount ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldInvNo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 40, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelGTotall, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelDiscount1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldDiscount)
                            .addComponent(jTextFieldTotal)
                            .addComponent(jTextFieldGTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldInvNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDiscount1))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldGTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelGTotall))
                .addGap(8, 8, 8)
                .addComponent(jButton3)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton3, jButton4, jComboBox1, jLabel2, jLabel4, jTextFieldGTotal, jTextFieldInvNo, jTextFieldTotal});

    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jTable1.getRowCount() > 0) {
            insertReturn();
        } else {
            JOptionPane.showMessageDialog(this, "No Product to create Invoice");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (jComboBox1.getSelectedItem() != null) {
            loadInvoiceToTable();
            calculate();
        } else {
            dtm.setRowCount(0);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            dtm.setValueAt(dtm.getValueAt(i, 4), i, 5);
            dtm.setValueAt(0, i, 6);
            calculate();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyTyped
//        calculate();
    }//GEN-LAST:event_jTable1KeyTyped

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
//        calculate();
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
        calculate();
    }//GEN-LAST:event_jTable1PropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelDiscount1;
    private javax.swing.JLabel jLabelGTotall;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldDiscount;
    private javax.swing.JTextField jTextFieldGTotal;
    private javax.swing.JTextField jTextFieldInvNo;
    private javax.swing.JTextField jTextFieldTotal;
    // End of variables declaration//GEN-END:variables

    private void initData() {
        dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        Global.setLookNFeel(jTable1);
        Global.addListToCombo(jComboBox1, getShopListFromWorkingDay(ws));

    }

    private List<Shop> getShopListFromWorkingDay(WorkingSchedule ws) {
        List<Shop> li = new ArrayList<>();
        map = new HashMap<>();

        for (Summary s : ws.getSummaryList()) {
            for (Invoice i : s.getInvoiceList()) {
                li.add(i.getInvoiceShop());
                map.put(i.getInvoiceShop().getId(), i);
            }
        }
        return li;
    }

    private void loadInvoiceToTable() {
        dtm.setRowCount(0);
        Shop s = (Shop) jComboBox1.getSelectedItem();
        activeInvoice = map.get(s.getId());

        jTextFieldInvNo.setText(activeInvoice.getInvoiceNo());
        for (InvoiceDetail detail : activeInvoice.getInvoiceDetailList()) {
            dtm.addRow(new Object[]{
                detail.getDetailProduct().getCode(),
                detail,
                detail.getDetailProduct().getProductQty(),
                Frmttr.Format(detail.getDetailProduct().getSalePrice(), Frmttr.RS),
                detail.getDetailProduct().getProductQtyObjectFromPieces(detail.getQty()),
                detail.getDetailProduct().getProductQtyObjectFromPieces(detail.getReturnQty()),
                detail.getDetailProduct().getProductQtyObjectFromPieces(detail.getQty() - detail.getReturnQty()),
                detail.getDetailProduct().getProductQtyObjectFromPieces(detail.getQty()).getCartons() * detail.getPrice()
            });
        }

    }

    private void calculate() {

        Shop shop = (Shop) jComboBox1.getSelectedItem();
        if (null != shop) {
            double price;
            double saleQty;
            double rtnQty;
            double total;

            double sum = 0;

            for (int i = 0; i < jTable1.getRowCount(); i++) {
                price = Frmttr.getDoubleFromString(dtm.getValueAt(i, 3) + "");
                saleQty = Frmttr.getDoubleFromString(dtm.getValueAt(i, 4) + "");
                rtnQty = Frmttr.getDoubleFromString(dtm.getValueAt(i, 5) + "");
                if (rtnQty > saleQty) {
                    rtnQty = saleQty;
                }
                total = price * (saleQty - rtnQty);

                dtm.setValueAt(saleQty - rtnQty, i, 6);
                dtm.setValueAt((price * (saleQty - rtnQty)), i, 7);

                sum += total;

            }

            jTextFieldTotal.setText(sum + "");
            jLabelDiscount1.setText("Discount  = " + shop.showDiscount());
            jTextFieldDiscount.setText("" + Calc.getDiscount(sum, shop));
            jTextFieldGTotal.setText("" + Frmttr.Format(Calc.lessDiscount(sum, shop), Frmttr.SIMPLE_NUMBER));

//        jLabelDiscount1.setText("Discount - " + discount + " %");
//        jLabelDiscount1.setText("Discount = Rs.");
        }

    }

    private void insertReturn() {
        Shop shop = (Shop) jComboBox1.getSelectedItem();

        if (null != shop) {
            double rtnQty;
            double rtnQtyInPcs;
            double saleQty;
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                InvoiceDetail dt = (InvoiceDetail) dtm.getValueAt(i, 1);
                saleQty = Frmttr.getDoubleFromString(dtm.getValueAt(i, 4) + "");
                rtnQty = Frmttr.getDoubleFromString(dtm.getValueAt(i, 5) + "");
                if (rtnQty > saleQty) {
                    rtnQty = saleQty;
                }
                rtnQtyInPcs = dt.getDetailProduct().getProductQtyObjectFromCartons(rtnQty).getPieces();
                dt.setReturnQty(rtnQtyInPcs);

            }
            activeInvoice.setReturn(true);
            activeInvoice.calculate();
            activeInvoice.getInvoiceSummary().calculate();

            Response updateRecord = Global.CONTROLLER.updateRecord(activeInvoice.getInvoiceSummary(), "Summary");
            if (updateRecord.isSuccess()) {

                JOptionPane.showMessageDialog(this, "Record saved");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select the shop first");
        }
    }
}
