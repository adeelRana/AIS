/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ar.ais.views.panels.purchase;

import com.ar.ais.components.render.CustomKeyListener;
import com.ar.ais.enums.Status;
import com.ar.ais.enums.StockType;
import com.ar.ais.models.EntityBeans.Company;
import com.ar.ais.models.EntityBeans.Products;
import com.ar.ais.models.EntityBeans.Stock;
import com.ar.ais.models.EntityBeans.StockDetail;
import com.ar.ais.models.ProductQty;
import com.ar.ais.models.Response;
import com.ar.ais.utililty.Frmttr;
import com.ar.ais.utililty.Global;
import com.ar.ais.views.dialogs.ProductSelectionDialog;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Adeel rana
 */
public class AddPurchasePanel extends javax.swing.JPanel {

    private DefaultTableModel dtm;
    private StockDetail detail;
    private boolean isDialogueVisible = false;
    private ProductSelectionDialog psd;

    /**
     * Creates new form UsersPanel
     *
     * @param mainPanel
     */
    public AddPurchasePanel(JPanel mainPanel) {
        initComponents();
        initData();
    }

    public AddPurchasePanel() {
        initComponents();
        initData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.ar.ais.components.render.CustomTable(true);
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();

        setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Army Expanded", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Purchase Invoice");

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jTable1.setBackground(new java.awt.Color(178, 178, 178));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Code", "Name", "Pcs / Ctn", "Stock", "Stock In Pcs", "Stock In in Ctns"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setNextFocusableComponent(jButton2);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(1).setMinWidth(200);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1)
                .addGap(3, 3, 3))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        jButton2.setText("Add Item");
        jButton2.setNextFocusableComponent(jButton5);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Save");
        jButton3.setNextFocusableComponent(jComboBox1);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Remove");
        jButton5.setNextFocusableComponent(jButton3);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Company");

        jComboBox1.setNextFocusableComponent(jTextField1);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Date");

        jTextField1.setNextFocusableComponent(jButton2);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Invoice No");

        jXDatePicker1.setNextFocusableComponent(jTextField1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3))
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jComboBox1, jTextField1, jXDatePicker1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton2, jButton3, jButton5, jComboBox1, jLabel2, jLabel3, jLabel4, jTextField1, jXDatePicker1});

    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        addProductToTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jTable1.getRowCount() > 0) {
            insertStock();
        } else {
            JOptionPane.showMessageDialog(this, "No Product to create Invoice");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        removeFromTable();
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    // End of variables declaration//GEN-END:variables

    public void setFocus() {
        jXDatePicker1.requestFocus();
    }

    private void initData() {
        dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        Global.setLookNFeel(jTable1);
        Global.addListToCombo(jComboBox1, (List<Company>) Global.CONTROLLER.fetchActive("Company").getResponseObject());
        addKeyListeners();
        jXDatePicker1.setDate(new Date());

    }

    private void addProductToTable() {
        psd = new ProductSelectionDialog(Global.getMainFrame(), true, true);
        psd.setVisible(true);
        if (null != psd.getproduct()) {
            Products product = psd.getproduct();

            detail = new StockDetail(product);

            dtm.addRow(new Object[]{
                detail.getStockProduct().getCode(),
                detail,
                detail.getStockProduct().getPiecesPerCtn(),
                detail.getStockProduct().getProductQty()

            });
            psd = null;
        }

    }

    private void removeFromTable() {
        if (jTable1.getSelectedRowCount() > 0 && jTable1.getSelectedRowCount() < 2) {
            dtm.removeRow(jTable1.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(this, "Please select One record");
        }

    }

    private void keyActions(java.awt.event.KeyEvent evt) {

        switch (evt.getKeyCode()) {
            case 10:            //10 Enter
//                selectProduct();
                break;
            case 27:            //27 esc         

                if (!isDialogueVisible && null == psd) {
                    isDialogueVisible = true;
                    int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Are you sure, You want to go back");
                    if (showConfirmDialog == 0) {
                        Global.addPanel(PurchasePanel.class, Global.getMainPanel());
                    }
                } else {
                    isDialogueVisible = false;
                }
                break;
            case 116:            //116 f5 OR 119 f8
                jTextField1.setText("");
                initData();
                break;
            case 120:             // 120 f9
                addProductToTable();
                break;
            case 123:             // 120 f12
                if (jTable1.getRowCount() > 0) {
                    insertStock();
                } else {
                    JOptionPane.showMessageDialog(this, "No Product to create Invoice");
                }
                break;
            default:
                break;

        }
    }

    private void insertStock() {
        Stock stock = new Stock();
        stock.setStockCompany((Company) jComboBox1.getSelectedItem());
        try {
            stock.setInvoiceNo(Long.parseLong(jTextField1.getText().trim()));
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid Invoice No.");
            return;
        }

        stock.setDate(Global.DATE_UTIL.getNewDate().getTime());
        stock.setStockType(StockType.CR_PURCHASE.name());
        stock.setDate(jXDatePicker1.getDate().getTime());
        stock.setTimeIn(Global.DATE_UTIL.getStingTimeFromDate(new Date()));

        StockDetail dt;
        ProductQty qtyObj;
        double totalQty = 0;
        double totalAmount = 0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            dt = (StockDetail) dtm.getValueAt(i, 1);
            qtyObj = new ProductQty(dt.getStockProduct().getPiecesPerCtn(), Frmttr.getDoubleFromString("" + dtm.getValueAt(i, 4)), dt.getStockProduct().getWeight());

            dt.setQty(qtyObj.getTotalPieces());
            dt.setStock(stock);
            dt.getStockProduct().setStatus(Status.ACTIVE.getValue());
            stock.getStockDetailList().add(dt);

            totalQty += qtyObj.getCartons();
            totalAmount += dt.getStockProduct().getPurchasePrice() * qtyObj.getCartons();
        }

        stock.setTotalQty(totalQty);
        stock.setTotalAmount(totalAmount);
        stock.setPaid(0);
        stock.setPayable(totalAmount);
        stock.setStatus(Status.PAYBLE.getValue());

        Response insertRecord = Global.CONTROLLER.insertRecord(stock, "Stock");

        if (insertRecord.isSuccess()) {
            Products p;
            for (StockDetail d : stock.getStockDetailList()) {
                p = d.getStockProduct();
                p.setCurrentQty(p.getCurrentQty() + d.getQty());
                Global.CONTROLLER.updateRecord(d.getStockProduct(), "Products");
            }
            Global.addPanel(PurchasePanel.class, Global.getMainPanel());
        }
    }

    private void addKeyListeners() {
        jComboBox1.addKeyListener(new CustomKeyListener() {
            @Override
            public void keyReleased(KeyEvent ke) {
                keyActions(ke);
            }
        });
        jTextField1.addKeyListener(new CustomKeyListener() {
            @Override
            public void keyReleased(KeyEvent ke) {
                keyActions(ke);
            }
        });
        jXDatePicker1.addKeyListener(new CustomKeyListener() {
            @Override
            public void keyReleased(KeyEvent ke) {
                keyActions(ke);
            }
        });
        jTable1.addKeyListener(new CustomKeyListener() {
            @Override
            public void keyReleased(KeyEvent ke) {
                keyActions(ke);
            }
        });
        jButton2.addKeyListener(new CustomKeyListener() {
            @Override
            public void keyReleased(KeyEvent ke) {
                keyActions(ke);
            }
        });
        jButton3.addKeyListener(new CustomKeyListener() {
            @Override
            public void keyReleased(KeyEvent ke) {
                keyActions(ke);
            }
        });
        jButton5.addKeyListener(new CustomKeyListener() {
            @Override
            public void keyReleased(KeyEvent ke) {
                keyActions(ke);
            }
        });
    }

}
